apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "commons.fullname" . }}
  labels:
    {{- include "commons.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "commons.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9115"
      labels:
        app: {{ template "commons.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ template "commons.name" . }}
        app.kubernetes.io/version: {{ .Chart.Version | quote }}
        appRevision: {{ template "commons.nameRevision" . }}
        chart: {{ template "commons.chart" . }}
        helm.sh/chart: {{ template "commons.chart" . }}
        release: {{ .Release.Name }}
        releaseRevision: {{ .Release.Revision | quote }}
        heritage: {{ .Release.Service }}
    spec:
      serviceAccountName: {{ include "commons.fullname" . }}
      containers:
        - name: redis-database-assignment-operator
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: metrics
              containerPort: 9115
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: metrics
          readinessProbe:
            httpGet:
              path: /
              port: metrics
          startupProbe:
            failureThreshold: 13
            periodSeconds: 1
            httpGet:
              path: /
              port: metrics
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
