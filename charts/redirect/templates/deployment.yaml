apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "commons.fullname" . }}
  labels:
    {{- include "commons.labels" . | nindent 4 }}
    {{- toYaml .Values.labels | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "commons.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "7133"
      labels:
        {{- include "commons.labels" . | nindent 8 }}
        {{- toYaml .Values.labels | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "redirect.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 7132
              protocol: TCP
            - name: http-metrics
              containerPort: 7133
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http-metrics
          readinessProbe:
            httpGet:
              path: /ping
              port: http-metrics
          startupProbe:
            failureThreshold: 33
            periodSeconds: 1
            httpGet:
              path: /ping
              port: http-metrics
          volumeMounts:
            - name: {{ include "commons.fullname" . }}-volume
              mountPath: /etc/redirect/
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: {{ include "commons.fullname" . }}-volume
          configMap:
            name: {{ include "commons.fullname" . }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: appRevision
                operator: In
                values:
                - {{ template "commons.nameRevision" . }}
            topologyKey: "kubernetes.io/hostname"
